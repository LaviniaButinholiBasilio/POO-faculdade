import os
from datetime import datetime


class Biblioteca:
    def __init__(self):
        self.usuarios_file = "usuarios.txt"
        self.livros_file = "livros.txt"
        self.emprestimos_file = "emprestimos.txt"
        self.usuario_logado = None

    def carregar_usuarios(self):
        if not os.path.exists(self.usuarios_file):
            return []

        with open(self.usuarios_file, "r") as f:
            usuarios = [line.strip().split(",") for line in f.readlines()]
        return usuarios

    def carregar_livros(self):
        if not os.path.exists(self.livros_file):
            return []

        with open(self.livros_file, "r") as f:
            livros = [line.strip().split(",") for line in f.readlines()]
        return livros

    def carregar_emprestimos(self):
        if not os.path.exists(self.emprestimos_file):
            return []

        with open(self.emprestimos_file, "r") as f:
            emprestimos = [line.strip().split(",") for line in f.readlines()]
        return emprestimos

    def validar_usuario(self, login, senha):
        usuarios = self.carregar_usuarios()
        for usuario in usuarios:
            codigo, nome, tipo, user_login, user_senha = usuario
            if user_login == login and user_senha == senha:
                self.usuario_logado = {"codigo": codigo, "nome": nome, "tipo": tipo}
                return True
        return False

    def menu_principal(self):
        while True:
            print("\n" + "=" * 40)
            print(f"Bem-vindo ao sistema da CodeLibrary Systems")
            print(f"Usuário logado: {self.usuario_logado['nome']}")
            print("=" * 40)
            print("1 – Visualizar Empréstimos")
            print("2 – Visualizar Livros")
            print("3 – Sobre")
            print("4 – Sair")
            opcao = input("Escolha uma opção: ")

            if opcao == "1":
                self.visualizar_emprestimos()
            elif opcao == "2":
                self.visualizar_livros()
            elif opcao == "3":
                self.sobre()
            elif opcao == "4":
                print("Saindo do sistema...")
                break
            else:
                print("Opção inválida. Tente novamente.")

    def visualizar_emprestimos(self):
        emprestimos = self.carregar_emprestimos()
        print("\n" + "=" * 40)
        print("Seus Empréstimos")
        print("=" * 40)
        for emprestimo in emprestimos:
            codigo, codigo_cliente, codigo_livro, data_emprestimo = emprestimo
            if codigo_cliente == self.usuario_logado["codigo"]:
                print(f"Código do Empréstimo: {codigo}")
                print(f"Código do Livro: {codigo_livro}")
                print(f"Data do Empréstimo: {data_emprestimo}")
                print("-" * 40)
        input("Pressione Enter para voltar ao menu.")

    def visualizar_livros(self):
        livros = self.carregar_livros()
        print("\n" + "=" * 40)
        print("Livros Disponíveis")
        print("=" * 40)
        for livro in livros:
            codigo, titulo, autor = livro
            print(f"Código: {codigo} | Título: {titulo} | Autor: {autor}")
        input("Pressione Enter para voltar ao menu.")

    def sobre(self):
        print("\n" + "=" * 40)
        print("Sobre o Sistema")
        print("=" * 40)
        print("Empresa: CodeLibrary Systems")
        print("História: Empresa fictícia especializada em softwares para bibliotecas.")
        print("Equipe:")
        print("- Desenvolvedor: João Silva")
        print("- Analista de Sistemas: Maria Souza")
        print("- Testador: Carlos Lima")
        print("- Gerente de Projeto: Ana Oliveira")
        input("Pressione Enter para voltar ao menu.")



def main():
    sistema = Biblioteca()

    print("=" * 40)
    print("Bem-vindo ao Sistema de Biblioteca!")
    print("=" * 40)
    login = input("Informe seu login: ")
    senha = input("Informe sua senha: ")

    if sistema.validar_usuario(login, senha):
        sistema.menu_principal()
    else:
        print("Login ou senha inválidos. Tente novamente.")


if __name__ == "__main__":
    main()
